# Sound System Status

## Project Goals
- Deliver a reliable SDL_mixer based audio stack that can run headless or with full observer UI.
- Keep soundtrack and effects flexible via `sound/defaults.txt`, supporting per-team overrides and behaviour hints (queue, delay, scale).
- Ensure the observer UI exposes intuitive audio controls (mute toggles, diagnostics, future playlist control) while respecting command-line flags.

## In Progress
- **World-driven effect emission**
  - Ensure remaining gameplay events emit `CWorld::LogAudioEvent()` calls (e.g., game-end summaries still pending richer metadata).
  - Confirm new game outcome IDs (`team#.game_lost.default`) follow a consistent naming scheme across replays and remote observers.
- **Default configuration refinements**
  - Document manual namespace keys (e.g., `manual.menu.toggle_enabled_alt`) for UI code to reference.
- **Observer audio UX**
  - Track context is now displayed; add tooltip/legend updates so help footer also references the `[X]` shortcut.
  - Collect feedback on the alternating menu clicks to confirm they feel responsive when spammed while muted.

## Remaining TODOs
- *(None for this milestone – see completion log.)*

### Completed This Milestone
- **Menu interaction sounds**
  - Centralized all shortcut/UI mute toggles on `PlayMenuToggleSound`, armed a one-shot confirmation after rising-edge unmute, and kept `manual.menu.*` cues in the manual namespace.
- **Soundtrack management**
  - Logged playlist seed/order on startup, exposed the `--playlist-seed` CLI override, surfaced upcoming tracks in the audio panel, and exercised manual/auto advancement in the new headless probe.
- **Observer startup polish**
  - Footer and panel honor `--mute` on the first draw, the help footer advertises current mute states, and the confirmation click is deferred until effects unmute.
- **Testing & tooling**
  - Added `scripts/audio_headless_smoke.sh` and the `mm4_audio_probe` harness (driving `CWorld` + `AudioSystem`) to validate logs, refreshed documentation with the audio QA checklist, and linked the SOUND overview from `docs/README_MODERNIZED.md`.
- **Sync investigation**
  - Add a configurable “audio lead” experiment: queue per-turn effects immediately after world update, sleep a short configurable latency (e.g. 75–100 ms), then render the frame. This decouples the audio trigger from the draw call without changing game timing; evaluate impact before considering deeper display-lag approaches.
